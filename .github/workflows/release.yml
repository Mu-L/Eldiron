name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

# ─────────────────────────────── Linux build ────────────────────────────────
jobs:
  linux_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # --- Build Eldiron -----------------------------------------------------
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libgtk-3-dev pkg-config

      - name: Build (release)
        working-directory: creator
        run: cargo build --verbose --release

      # --- Package artefacts -------------------------------------------------
      - name: Package artefacts
        working-directory: creator
        run: |
          mv ../target/release/eldiron .
          tar -czvf eldiron-x86_64-unknown-linux-gnu.tar.gz eldiron
          mkdir -p output
          mv eldiron-*.gz output/

      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: Linux
          path: creator/output

# ────────────────────────────── Windows build ───────────────────────────────
  windows_build:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash        # use Git-bash for every step

    steps:
      - uses: actions/checkout@v4

      # --- Make paths short & long-path aware --------------------------------
      - name: Enable long paths and shorten Cargo dirs
        run: |
          git config --system core.longpaths true
          echo "CARGO_HOME=C:\\c"                  >> $GITHUB_ENV
          echo "RUSTUP_HOME=C:\\r"                 >> $GITHUB_ENV
          echo "CARGO_TARGET_DIR=C:\\t"            >> $GITHUB_ENV
          echo "CARGO_NET_GIT_FETCH_WITH_CLI=true" >> $GITHUB_ENV

      # --- Install Rust ------------------------------------------------------
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      # --- Build Eldiron -----------------------------------------------------
      - name: Build (release)
        working-directory: creator
        run: cargo build --verbose --release

      # --- Package artefacts -------------------------------------------------
      - name: Package artefacts
        run: |
          mv /c/t/release/eldiron.exe .
          tar -czvf eldiron-x86_64-pc-windows-msvc.tar.gz eldiron.exe
          mkdir -p output
          mv eldiron-*.gz output/

      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: Windows
          path: output

# ─────────────────────────── Linux release job ──────────────────────────────
  linux_release:
    runs-on: ubuntu-latest
    needs: linux_build
    env:
      CARGO_BUNDLE_SKIP_BUILD: true
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download artefacts
        uses: actions/download-artifact@v4
        with:
          name: Linux

      - name: Unpack tarball
        run: tar -xzvf eldiron-*.gz

      - name: Install cargo-bundle
        run: cargo install cargo-bundle@0.6.0

      - name: Build .deb package
        run: |
          mkdir -p target/release
          cp eldiron target/release/
          cd creator
          cargo bundle --release --bin eldiron

      - name: Rename .deb
        run: mv target/release/bundle/deb/*.deb Eldiron.deb

      - name: GitHub release (Linux)
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Eldiron.deb
            eldiron-*.gz

# ────────────────────────── Windows release job ─────────────────────────────
  windows_release:
    runs-on: windows-latest
    needs: windows_build
    permissions:
      contents: write
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Download artefacts
        uses: actions/download-artifact@v4
        with:
          name: Windows

      - name: Unpack tarball
        run: tar -xzvf eldiron-*.gz

      - name: Install WiX
        run: nuget install WiX -Version 3.11.2

      - name: Build MSI installer
        run: |
          ./WiX.*/tools/candle.exe -arch x64 -ext WixUIExtension -ext WixUtilExtension \
            -out eldiron.wixobj ./build/windows/wix/eldiron.wxs
          ./WiX.*/tools/light.exe -ext WixUIExtension -ext WixUtilExtension \
            -out Eldiron.msi -sice:ICE61 -sice:ICE91 eldiron.wixobj

      - name: GitHub release (Windows)
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Eldiron.msi
            eldiron-*.gz
