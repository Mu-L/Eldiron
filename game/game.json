{
  "nodes": {
    "3f22cf39-1cff-4408-b08d-2aac047d8c36": {
      "behavior_type": "Screen",
      "name": "Screen",
      "values": {
        "reveal_scripts": {
          "String": "Reveal"
        },
        "script_name": {
          "String": "local_login.rhai"
        }
      },
      "id": "3f22cf39-1cff-4408-b08d-2aac047d8c36",
      "position": [
        353,
        239
      ]
    },
    "2b962655-d12d-4f18-9dfc-f380219a3921": {
      "behavior_type": "BehaviorTree",
      "name": "Game",
      "values": {
        "execute": {
          "Integer": 0
        }
      },
      "id": "2b962655-d12d-4f18-9dfc-f380219a3921",
      "position": [
        431,
        48
      ]
    },
    "6b1ba4b4-59f2-46b6-87b5-19c4f2e21fd2": {
      "behavior_type": "BehaviorTree",
      "name": "Server_Login",
      "values": {
        "execute": {
          "Integer": 0
        }
      },
      "id": "6b1ba4b4-59f2-46b6-87b5-19c4f2e21fd2",
      "position": [
        246,
        115
      ]
    },
    "affd5d73-d981-4792-9a10-7ade9485d214": {
      "behavior_type": "BehaviorType",
      "name": "Behavior Type",
      "values": {
        "startup": {
          "String": "Local_Login"
        }
      },
      "id": "affd5d73-d981-4792-9a10-7ade9485d214",
      "position": [
        0,
        0
      ]
    },
    "3ffc63c7-997d-445e-9081-9af754bb396c": {
      "behavior_type": "Screen",
      "name": "Screen",
      "values": {
        "screen": {
          "String": "fn init() {\n  this.tile_size = 41;  // Default tile size\n  this.gold = rgb(200, 200, 150);\n  this.silver = rgb(192, 192, 192);\n  this.tm1 = this.tilemaps.get(\"UIParts1\");\n  this.iconstm = this.tilemaps.get(\"Icons\");\n  this.movement_id = \"\";\n  this.movement_visible = 0;\n  this.font_name = \"Roboto-Medium\";\n  this.context = \"Inventory\";\n  this.board = rect(671, 197, 326, 364);\n  this.items = rect(671, 90, 326, 80);\n  this.item_id = -1;\n  this.item_highlighted = 0;\n  this.cmd.set_valid_mouse_rect(rect(80, 80, 510, 340));\n\n  this.style_switch_rect = rect(28, 28, 80, 20);\n  this.style_name = \"MODERN\";\n\n  this.region_mode_rect = rect(578, 28, 60, 20);\n  this.region_mode = \"2D\";\n\n  this.message.status(\"Welcome to the Eldiron Demo worthy adventurer.\");\n\n  // The action icon rectangles\n\n  let ts = this.tile_size;\n  this.actions = #{\n    \"Attack\"      : rect(168, 505, 32, 32),\n    \"Move\"        : rect(200, 505, 32, 32),\n    \"Look\"        : rect(232, 505, 32, 32),\n    \"Use\"         : rect(264, 505, 32, 32),\n    \"Talk\"        : rect(296, 505, 32, 32),\n    \"Equip\"       : rect(328, 505, 32, 32),\n    \"Take\"        : rect(360, 505, 32, 32),\n    \"Drop\"        : rect(392, 505, 32, 32),\n\n    \"Weapons\"     : rect(464, 505, 32, 32),\n    \"Gear\"        : rect(496, 505, 32, 32),\n    \"Inventory\"   : rect(528, 505, 32, 32),\n    \"Spells\"      : rect(560, 505, 32, 32),\n  };\n  this.curr_action = \"Move\";\n\n  this.action_text = \"FOR MORE INFORMATION PLEASE VISIT ELDIRON.COM\";\n  this.context_text = \"\";\n}\n\n// Draw the screen\nfn draw() {\n  let ts = this.tile_size;\n\n  let shape = shape();\n  let s = 25; let game_width = 640; let game_height = 581; shape.border_size = 2.0;\n  if this.style_name == \"CLASSIC\" {\n    shape.color = rgb(20, 30, 100); shape.border_color = rgb(100, 100, 100);\n    shape.add_rounded_rect(rect(0, 0, 200, s), rect(10, 15, 0, 15));                     // Top Left\n    shape.add_rounded_rect(rect(400, 0, this.width - 400, s), rect(15, 10, 15, 0));      // Top Right\n    shape.add_rounded_rect(rect(0, 0, s, game_height), rect(10, 0, 10, 0));              // Left Vertical\n    shape.add_rounded_rect(rect(game_width, 0, s, game_height), rect(10, 10, 0, 10));    // Middle Vertical\n    shape.add_rounded_rect(rect(0, game_height - s, this.width, s), rect(0, 0, 10, 10));\n    shape.add_rect(rect(game_width, 70, this.width - game_width, 20));\n    shape.add_rect(rect(game_width, 170, this.width - game_width, s));\n    shape.add_rounded_rect(rect(this.width - s, 0, s, game_height), rect(0, 10, 0, 10));\n    this.cmd.draw_shape(shape);\n  } else {\n    this.cmd.draw_rect(rect(0, 0, this.width, this.height), rgb(0, 0, 0));\n  }\n\n  // Game\n\n  // 3d ?\n  if this.region.supports_3d == true && this.region_mode == \"3D\" {\n    this.cmd.draw_game_3d(rect(s, s, 615, 533));\n    this.cmd.draw_game_2d(rect(s + 615 - 150, s, 150, 150));\n    this.region.display_mode = \"3d\";\n  } else {\n    if this.style_name == \"CLASSIC\" {\n      this.cmd.draw_game_2d(rect(s, s, 615, 533));\n    } else {\n      this.cmd.draw_game_offset_2d(rect(15, 10, this.width - 35, this.height - 34), pos(5, 0));\n    }\n    this.region.display_mode = \"2d\";\n  }\n\n  this.cmd.draw_rect(rect(215, 2, 180, 25), rgb(0, 0, 0));\n  this.cmd.draw_text(pos(220, 2), \"Eldiron Demo \" + this.date.time12(), this.font_name, 19.0, rgb(150, 150, 150));\n\n  // Buttons\n\n  this.cmd.draw_rect(this.style_switch_rect, rgb(0, 0, 0));\n  this.cmd.draw_text_rect(this.style_switch_rect, this.style_name, this.font_name, 15.0, rgb(180, 180, 180), \"center\");\n\n  if this.region.supports_3d == true {\n    // This region supports 3d, make it switchable\n    this.cmd.draw_rect(this.region_mode_rect, rgb(0, 0, 0));\n    this.cmd.draw_text_rect(this.region_mode_rect, this.region_mode, this.font_name, 15.0, rgb(180, 180, 180), \"center\");\n  }\n\n  // Movement control\n  let offset = 0; if this.movement_id == \"West\" { offset = 1; };\n  this.cmd.draw_tile_sat(pos(1 * ts, 11 * ts), this.tm1.get_tile(1 + offset, 8), this.silver);\n  offset = 0; if this.movement_id == \"North\" { offset = 1; };\n  this.cmd.draw_tile_sat(pos(2 * ts, 10 * ts), this.tm1.get_tile(7 + offset, 6), this.silver);\n  offset = 0; if this.movement_id == \"East\" { offset = 1; };\n  this.cmd.draw_tile_sat(pos(3 * ts, 11 * ts), this.tm1.get_tile(4 + offset, 8), this.silver);\n  offset = 0; if this.movement_id == \"South\" { offset = 1; };\n  this.cmd.draw_tile_sat(pos(2 * ts, 12 * ts), this.tm1.get_tile(7 + offset, 7), this.silver);\n  this.movement_visible -= 1;\n  if this.movement_visible <= 0 { this.movement_id = \"\"; }\n\n  // Action Icons\n  let tile;\n  if this.curr_action == \"Attack\" { tile = this.iconstm.get_tile(23, 1); } else { tile = this.iconstm.get_tile(22, 1); }\n  this.cmd.draw_tile_sized(this.actions.Attack.pos, tile, 32);\n  if this.curr_action == \"Move\" { tile = this.iconstm.get_tile(3, 4); } else { tile = this.iconstm.get_tile(2, 4); }\n  this.cmd.draw_tile_sized(this.actions.Move.pos, tile, 32);\n  if this.curr_action == \"Look\" { tile = this.iconstm.get_tile(1, 0);} else { tile = this.iconstm.get_tile(0, 0); }\n  this.cmd.draw_tile_sized(this.actions.Look.pos, tile, 32);\n  if this.curr_action == \"Use\" { tile = this.iconstm.get_tile(21, 2);} else { tile = this.iconstm.get_tile(20, 2); }\n  this.cmd.draw_tile_sized(this.actions.Use.pos, tile, 32);\n  if this.curr_action == \"Talk\" { tile = this.iconstm.get_tile(7, 0);} else { tile = this.iconstm.get_tile(6, 0); }\n  this.cmd.draw_tile_sized(this.actions.Talk.pos, tile, 32);\n  if this.curr_action == \"Equip\" { tile = this.iconstm.get_tile(21, 1);} else { tile = this.iconstm.get_tile(20, 1); }\n  this.cmd.draw_tile_sized(this.actions.Equip.pos, tile, 32);\n  if this.curr_action == \"Take\" { tile = this.iconstm.get_tile(13, 2);} else { tile = this.iconstm.get_tile(12, 2); }\n  this.cmd.draw_tile_sized(this.actions.Take.pos, tile, 32);\n  if this.curr_action == \"Drop\" { tile = this.iconstm.get_tile(15, 2);} else { tile = this.iconstm.get_tile(14, 2); }\n  this.cmd.draw_tile_sized(this.actions.Drop.pos, tile, 32);\n  if this.context == \"Spells\" { tile = this.iconstm.get_tile(25, 2);} else { tile = this.iconstm.get_tile(24, 2); }\n  this.cmd.draw_tile_sized(this.actions.Spells.pos, tile, 32);\n  if this.context == \"Weapons\" { tile = this.iconstm.get_tile(23, 1);} else { tile = this.iconstm.get_tile(22, 1); }\n  this.cmd.draw_tile_sized(this.actions.Weapons.pos, tile, 32);\n  if this.context == \"Gear\" { tile = this.iconstm.get_tile(23, 0);} else { tile = this.iconstm.get_tile(22, 0); }\n  this.cmd.draw_tile_sized(this.actions.Gear.pos, tile, 32);\n  if this.context == \"Inventory\" { tile = this.iconstm.get_tile(11, 0);} else { tile = this.iconstm.get_tile(10, 0); }\n  this.cmd.draw_tile_sized(this.actions.Inventory.pos, tile, 32);\n\n  // Player Info\n  if this.style_name == \"MODERN\" {\n    this.cmd.draw_rect(rect(671 - 8, 26 - 8, 326 + 16, 40 + 16), rgba(20, 20, 20, 220));\n    this.cmd.draw_rect(rect(671 - 8, 90 - 8, 326 + 16, 80 + 16), rgba(20, 20, 20, 220));\n    this.cmd.draw_rect(rect(671 - 8, 197 - 8, 326 + 16, 364 + 16), rgba(20, 20, 20, 220));\n  }\n  this.cmd.draw_text_rect(rect(671, 26, 326, 20), \"\" + this.player.name, this.font_name, 19.0, rgb(150, 150, 150), \"left\");\n  this.cmd.draw_text_rect(rect(671, 26, 326, 20), \"\" + this.player.gold + \"G\", this.font_name, 19.0, rgb(150, 150, 150), \"right\");\n  this.cmd.draw_text_rect(rect(671, 50, 326, 20), \"HP: \" + this.player.HP + \"  STR:\" + this.player.STR, this.font_name, 19.0, rgb(150, 150, 150), \"left\");\n  this.cmd.draw_text_rect(rect(671, 50, 326, 20), \"LVL: \" + this.experience.level, this.font_name, 19.0, rgb(150, 150, 150), \"right\");\n\n  // Messages\n  this.cmd.draw_messages(this.board, this.font_name, 16.0, this.silver);\n\n  if this.context == \"Spells\" {\n    let y = 90;\n    let color = rgb(150, 150, 150);\n    let index = 0;\n    for spell in this.spells {\n      //if this.item_id == item && this.item_highlight > 0 {\n      //  color = this.silver;\n      //  this.item_highlight -= 1;\n      //}\n      this.cmd.draw_text(pos(671, y), \"\" + (index + 1) + \". \" + spell.name, this.font_name, 19.0, color);\n      //this.cmd.draw_text_rect(rect(671, y, 326, 20), \"\" + this.inventory.item_amount_at(item), this.font_name, 19.0, color, \"right\");\n      y += 20;\n      index += 1;\n    }\n  } else\n  if this.context == \"Inventory\" {\n    let y = 90;\n    let color = rgb(150, 150, 150);\n    for item in 0..this.inventory.len() {\n      if this.item_id == item && this.item_highlight > 0 {\n        color = this.silver;\n        this.item_highlight -= 1;\n      }\n      this.cmd.draw_text(pos(671, y), \"\" + (item + 1) + \". \" + this.inventory.item_name_at(item), this.font_name, 19.0, color);\n      this.cmd.draw_text_rect(rect(671, y, 326, 20), \"\" + this.inventory.item_amount_at(item), this.font_name, 19.0, color, \"right\");\n      y += 20;\n    }\n  } else\n  if this.context == \"Weapons\" {\n    let y = 90;\n    let color = rgb(150, 150, 150);\n    let name = this.weapons.item_name_for(\"main hand\");\n    if name == \"\" { name = \"<Empty>\"; };\n    this.cmd.draw_text(pos(671, y), \"Main Hand: \" + name, this.font_name, 19.0, color);\n  }\n\n  // Action Text\n  this.cmd.draw_text(pos(10, this.height - 22), this.action_text, this.font_name, 14.0, rgb(150, 150, 150));\n  if this.context_text.len() > 0 {\n    this.cmd.draw_text(pos(300, this.height - 22), this.context_text, this.font_name, 14.0, rgb(150, 150, 150));\n  }\n}\n\n// Handle the mouse events\nfn touch_down(x, y) {\n\n  if this.style_switch_rect.is_inside(pos(x,y)) {\n    if this.style_name == \"CLASSIC\" {\n      this.style_name = \"MODERN\";\n    } else {\n      this.style_name = \"CLASSIC\";\n    }\n    return;\n  }\n\n  if this.region_mode_rect.is_inside(pos(x,y)) {\n    if this.region_mode == \"2D\" {\n      this.region_mode = \"3D\";\n    } else {\n      this.region_mode = \"2D\";\n    }\n    return;\n  }\n\n  let tx = x / this.tile_size; let ty = y / this.tile_size;\n\n  let dir = \"\";\n  if tx == 1 && ty == 11 {\n    dir = \"West\"\n  } else\n  if tx == 2 && ty == 10 {\n    dir = \"North\";\n  } else\n  if tx == 3 && ty == 11 {\n    dir = \"East\";\n  } else\n  if tx == 2 && ty == 12 {\n    dir = \"South\";\n  }\n\n  if dir.len() > 0 {\n    this.handle_action(dir);\n    return;\n  }\n\n  for item in this.actions.keys() {\n    if this.actions[item].is_inside(pos(x, y) ) {\n      if item == \"Spells\" || item == \"Messages\" || item == \"Gear\" || item == \"Inventory\" || item == \"Weapons\" {\n        this.context = item;\n      } else {\n        this.curr_action = item;\n        this.set_info_text();\n      }\n    }\n  }\n\n  // Item based action ?\n  if this.items.is_inside(pos(x, y)) {\n    let item = (y - this.items.y) / 20;\n    if this.inventory.len() > item {\n      this.cmd.action_inventory(this.curr_action, item);\n      this.item_id = 0;\n      this.item_highlight = 2;\n      this.curr_action = \"Move\";\n    }\n  }\n\n  // Coordinate based action ?\n  this.cmd.action_coordinate(this.curr_action);\n  this.set_info_text();\n}\n\n// Handle key down events\nfn key_down(key) {\n  let dir = \"\";\n  if key == \"left\" {\n    dir = \"West\";\n  } else\n  if key == \"right\" {\n    dir = \"East\";\n  } else\n  if key == \"up\" {\n    dir = \"North\";\n  } else\n  if key == \"down\" {\n    dir = \"South\";\n  } else\n  if key == \"a\" {\n    this.curr_action = \"Attack\";\n  } else\n  if key == \"l\" {\n    this.curr_action = \"Look\";\n  } else\n  if key == \"k\" {\n    this.curr_action = \"Talk\";\n  } else\n  if key == \"m\" {\n    this.curr_action = \"Move\";\n  } else\n  if key == \"u\" {\n    this.curr_action = \"Use\";\n  } else\n  if key == \"t\" {\n    this.curr_action = \"Take\";\n  } else\n  if key == \"d\" {\n    this.curr_action = \"Drop\";\n  } else\n  if key == \"k\" {\n    this.curr_action = \"Talk\";\n  } else\n  if key == \"i\" {\n    this.context = \"Inventory\";\n  } else\n  if key == \"g\" {\n    this.context = \"Gear\";\n  } else\n  if key == \"w\" {\n    this.context = \"Weapons\";\n  } else\n  if key == \"s\" {\n    this.context = \"Spells\";\n  } else\n  if key == \"e\" {\n    this.curr_action = \"Equip\";\n  }\n\n  // Inventory Action ?\n  if this.context == \"Inventory\" {\n    try {\n      let key_int = parse_int(key) - 1;\n      if key_int >= 0 {\n        if this.inventory.len() > key_int {\n          this.cmd.action_inventory(this.curr_action, key_int);\n          this.item_id = key_int;\n          this.item_highlight = 2;\n          this.curr_action = \"Move\";\n          return;\n        }\n      }\n    }\n    catch(err) {}\n  }\n\n  this.set_info_text();\n  this.handle_action(dir);\n}\n\n// Execute action for the given direction\nfn handle_action(dir) {\n  if dir.len() > 0 {\n    this.movement_id = dir;\n    this.movement_visible = 2;\n    this.cmd.action(this.curr_action, dir);\n    this.curr_action = \"Move\";\n  }\n}\n\n// Set info text\nfn set_info_text() {\n\n  this.action_text = \"Action: \";\n  if this.curr_action == \"Move\" {\n    this.action_text += \"Move (M)\";\n  } else\n  if this.curr_action == \"Attack\" {\n    this.action_text += \"Attack (A)\";\n  } else\n  if this.curr_action == \"Look\" {\n    this.action_text += \"Look (L)\";\n  } else\n  if this.curr_action == \"Talk\" {\n    this.action_text += \"Talk (K)\";\n  } else\n  if this.curr_action == \"Use\" {\n    this.action_text += \"Use (U)\";\n  } else\n  if this.curr_action == \"Take\" {\n    this.action_text += \"Take (T)\";\n  } else\n  if this.curr_action == \"Drop\" {\n    this.action_text += \"Drop (D)\";\n  } else\n  if this.curr_action == \"Equip\" {\n    this.action_text += \"Equip (E)\";\n  }\n\n  this.context_text = \"Context: \";\n  if this.context == \"Spells\" {\n    this.context_text += \"Spells (S)\";\n  } else\n  if this.context == \"Inventory\" {\n    this.context_text += \"Inventory (I)\";\n  } else\n  if this.context == \"Gear\" {\n    this.context_text += \"Gear (G)\";\n  } else\n  if this.context == \"Weapons\" {\n    this.context_text += \"Weapons (W)\";\n  }\n}\n"
        },
        "script": {
          "String": "Edit"
        },
        "reveal_scripts": {
          "String": "Reveal"
        },
        "script_name": {
          "String": "main.rhai"
        }
      },
      "id": "3ffc63c7-997d-445e-9081-9af754bb396c",
      "position": [
        428,
        206
      ]
    },
    "53ab0e2d-20a5-46de-8e5e-f669dfe27b26": {
      "behavior_type": "Screen",
      "name": "Screen",
      "values": {
        "reveal_scripts": {
          "String": "Reveal"
        },
        "script_name": {
          "String": "characters.rhai"
        }
      },
      "id": "53ab0e2d-20a5-46de-8e5e-f669dfe27b26",
      "position": [
        328,
        232
      ]
    },
    "8b8b1db9-e911-46b5-b8c2-4e123689bae4": {
      "behavior_type": "BehaviorTree",
      "name": "Local_Login",
      "values": {
        "execute": {
          "Integer": 0
        }
      },
      "id": "8b8b1db9-e911-46b5-b8c2-4e123689bae4",
      "position": [
        350,
        91
      ]
    },
    "e8b8512f-a091-4bbe-bcee-0f3a2cb4f902": {
      "behavior_type": "BehaviorTree",
      "name": "Characters",
      "values": {
        "execute": {
          "Integer": 0
        }
      },
      "id": "e8b8512f-a091-4bbe-bcee-0f3a2cb4f902",
      "position": [
        337,
        104
      ]
    },
    "5749eb18-1842-4844-b545-09a7997e3136": {
      "behavior_type": "Screen",
      "name": "Screen",
      "values": {
        "reveal_scripts": {
          "String": "Reveal"
        },
        "script_name": {
          "String": "server_login.rhai"
        }
      },
      "id": "5749eb18-1842-4844-b545-09a7997e3136",
      "position": [
        246,
        253
      ]
    }
  },
  "connections": [
    [
      "2b962655-d12d-4f18-9dfc-f380219a3921",
      "Bottom",
      "3ffc63c7-997d-445e-9081-9af754bb396c",
      "Top"
    ],
    [
      "6b1ba4b4-59f2-46b6-87b5-19c4f2e21fd2",
      "Bottom",
      "5749eb18-1842-4844-b545-09a7997e3136",
      "Top"
    ],
    [
      "e8b8512f-a091-4bbe-bcee-0f3a2cb4f902",
      "Bottom",
      "53ab0e2d-20a5-46de-8e5e-f669dfe27b26",
      "Top"
    ],
    [
      "8b8b1db9-e911-46b5-b8c2-4e123689bae4",
      "Bottom",
      "3f22cf39-1cff-4408-b08d-2aac047d8c36",
      "Top"
    ]
  ],
  "id": "ad56f52c-4c6b-4bfb-85db-dca8d12292d7",
  "name": "game",
  "curr_node_id": "3f22cf39-1cff-4408-b08d-2aac047d8c36",
  "instances": [],
  "loot": null,
  "settings": {
    "properties": [
      {
        "name": "screen_size",
        "value": {
          "IntX": [
            1024,
            608
          ]
        }
      },
      {
        "name": "square_tile_size",
        "value": {
          "Int": 32
        }
      },
      {
        "name": "gear_slots",
        "value": {
          "String": "helm, chest, legs, boots"
        }
      },
      {
        "name": "weapon_slots",
        "value": {
          "String": "main hand, off hand"
        }
      },
      {
        "name": "ticks_per_minute",
        "value": {
          "Int": 4
        }
      },
      {
        "name": "abilities",
        "value": {
          "String": "STR, INT, WIS, DEX, CON, CHA"
        }
      }
    ],
    "error": null
  }
}