{"nodes":{"0":{"behavior_type":"BehaviorType","name":"Behavior Type","values":{"startup":[0.0,0.0,0.0,0.0,"Start"],"":[0.0,0.0,0.0,0.0,"Welcome"]},"id":0,"position":[0,0]},"1":{"behavior_type":"BehaviorTree","name":"Start","values":{},"id":1,"position":[240,93]},"2":{"behavior_type":"Screen","name":"Screen","values":{"script":[0.0,0.0,0.0,0.0,"width = 1024;   // 32 tiles\nheight = 608;   // 19 tiles\ntile_size = 32; // Default tile size\n\nlet ts = tile_size;\nlet gold = rgb(200, 200, 150);\nlet silver = rgb(192, 192, 192);\nlet tm1 = tilemaps.get(\"UIParts1\");\nlet frame_start = tm1.get_tile(3, 0);\nlet movement_id = \"\";\nlet movement_visible = 0;\nlet font_name = \"VT323-Regular\";\n\nmessage.status(\"Eldiron Demo v0.1. Work in progress.\");\n\n// Draw the screen\nfn draw() {\n  draw.rect(rect(0, 0, width, height), rgb(0, 0, 0)); // Black background\n\n  // Header\n  draw.tile_sat(pos(9 * ts, 2 * ts), tm1.get_tile(0,7), gold);\n  draw.tile_sat(pos(10 * ts, 2 * ts), tm1.get_tile(1, 7), gold);\n  draw.tile_sat(pos(11 * ts, 2 * ts), tm1.get_tile(2, 7), gold);\n  draw.text(pos(13 * ts + 5, 2 * ts), \"Eldiron\", \"eldiron\", 40.0, silver);\n  draw.tile_sat(pos(19 * ts, 2 * ts), tm1.get_tile(3, 7), gold);\n  draw.tile_sat(pos(20 * ts, 2 * ts), tm1.get_tile(4, 7), gold);\n  draw.tile_sat(pos(21 * ts, 2 * ts), tm1.get_tile(5, 7), gold);\n  draw.text(pos(5 * ts + 16, 4 * ts + 10), \"Enter the castle, city and dungeon to learn more about Eldiron!\", font_name, 25.0, silver);\n  draw.text(pos(6 * ts + 20, 5 * ts + 20), \"Tell your story and create your own classical & fun RPG.\", font_name, 25.0, silver);\n  draw.text(pos(10 * ts, 7 * ts), \"For more info visit Eldiron.com\", font_name, 25.0, silver);\n  // Game\n  let game_x = 6 * ts;\n  let game_y = 10 * ts;\n  draw.game(rect(game_x, game_y, 19 * ts, 5 * ts));\n  draw.frame_sat(rect(game_x - ts, game_y - ts, 21 * ts, 7 * ts), gold, frame_start);\n\n  // Movement control\n  let offset = 0; if movement_id == \"west\" { offset = 1; };\n  draw.tile_sat(pos(1 * ts, 11 * ts), tm1.get_tile(1 + offset, 8), gold);\n  offset = 0; if movement_id == \"north\" { offset = 1; };\n  draw.tile_sat(pos(2 * ts, 10 * ts), tm1.get_tile(7 + offset, 6), gold);\n  offset = 0; if movement_id == \"east\" { offset = 1; };\n  draw.tile_sat(pos(3 * ts, 11 * ts), tm1.get_tile(4 + offset, 8), gold);\n  offset = 0; if movement_id == \"south\" { offset = 1; };\n  draw.tile_sat(pos(2 * ts, 12 * ts), tm1.get_tile(7 + offset, 7), gold);\n  movement_visible -= 1;\n  if movement_visible <= 0 { movement_id = \"\"; }\n\n  // Messages\n  draw.messages(rect(5*ts, 520, width - 80, 80), font_name, 20.0, silver);\n}\n\n// Handle the mouse events\nfn touch_down(x, y) {\n  let tx = x / tile_size; let ty = y / tile_size;\n\n  let dir = \"\";\n  if tx == 1 && ty == 11 {\n    dir = \"west\"\n  } else\n  if tx == 2 && ty == 10 {\n    dir = \"north\";\n  } else\n  if tx == 3 && ty == 11 {\n    dir = \"east\";\n  } else\n  if tx == 2 && ty == 12 {\n    dir = \"south\";\n  }\n\n  if dir.len() > 0 {\n    movement_id = dir;\n    movement_visible = 2;\n    cmd.move(dir);\n  }\n}\n\n// Handle key down events\nfn key_down(key) {\n  let dir = \"\";\n  if key == \"left\" {\n    dir = \"west\";\n  } else\n  if key == \"right\" {\n    dir = \"east\";\n  } else\n  if key == \"up\" {\n    dir = \"north\";\n  } else\n  if key == \"down\" {\n    dir = \"south\";\n  }\n\n  if dir.len() > 0 {\n    movement_id = dir;\n    movement_visible = 2;\n    cmd.move(dir);\n  }\n}\n"]},"id":2,"position":[185,261]}},"connections":[[1,"Bottom",2,"Top"]],"id":3800922882,"name":"New Behavior","curr_node_id":2}